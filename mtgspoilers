#!/usr/bin/env python

import argparse
import logging
import sys

from config import MtgSpoilerConfig
from database import Database
from manager import Manager
from scryfall import ScryfallClient
from slackclient import SlackClient


def get_logger() -> logging.Logger:
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.DEBUG)

    handler = logging.StreamHandler(sys.stdout)
    handler.setLevel(logging.DEBUG)
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    handler.setFormatter(formatter)

    logger.addHandler(handler)
    return logger


def get_manager() -> Manager:
    logger = get_logger()
    logger.debug(f'Got logger: {logger}')
    config = MtgSpoilerConfig.from_env()
    api = ScryfallClient(config, logger)
    db = Database(config, logger)
    slack = SlackClient(config, logger)
    return Manager(config, db, api, slack, logger)


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('action', help='One of: refresh, watch, unwatch')
    parser.add_argument('arguments', metavar='SET', type=str, nargs='*', help='Individual sets to watch/unwatch')
    return parser.parse_args()


if __name__ == '__main__':
    args = parse_args()
    manager = get_manager().handle(args.action, args.arguments)
